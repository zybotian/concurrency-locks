# 这里的INFO,Stdout,D,E 看官们可以理解为变量，也可以说是输出平台，在下面我们可以看到
log4j.rootLogger = debug,stdout,D,E
# 控制台输出，stdout在这里就对应了上面的变量，consoleAppender 看名字也可以明白这个是控制台输出日志信息
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
# 这里没人的是System.out，也就是输出 out输出是黑色字体，err输出的字体是红色
log4j.appender.stdout.Target = System.out
# layout是指布局，也就是说输出日志信息的格式样式，在这里我们使用的是log4j提供的
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
# 这里就是指定我们日志文件以哪一种格式去输出
log4j.appender.stdout.layout.ConversionPattern = [%p] %d{yyyy-MM-dd HH:mm:ss,SSS} %l %m%n


# INFO级别输出日志文件
# 这里可以看到使用的是我们自定义的DailyRollingFileAppender.java
log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
# 指定日志输出位置${catalina.home}这个是tomcat的变量，不了解的看官可以自行脑补下
log4j.appender.D.File = /home/tianbo/logs/concurrency-locks-info.log
#这个的意思是指是追加还是覆盖 默认是 true  true是追加 false是覆盖
log4j.appender.D.Append = true
# 这个是指日志输出的级别在这里指定的是 INFO级别
log4j.appender.D.Threshold = INFO
#这个就不做介绍了
log4j.appender.D.layout = org.apache.log4j.PatternLayout
log4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ] %l %m%n

# ERROR级别输出日志文件
# 这个跟上面一样 只不过是日志级别是 ERROR级的，方便我们直接查看系统异常信息
log4j.appender.E = org.apache.log4j.DailyRollingFileAppender
log4j.appender.E.File =/home/tianbo/logs/concurrency-locks-error.log
log4j.appender.E.Append = true
log4j.appender.E.Threshold = ERROR
log4j.appender.E.layout = org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ] %l %m%n